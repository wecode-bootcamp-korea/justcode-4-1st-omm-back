generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  email        String
  password     String
  user_image   String?
  phone_number String?
  is_deleted   Boolean   @default(false)
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())
  deleted_at   DateTime? @default(now())

  masters     Masters[]
  requestForm RequestForm[]
  reviews     Reviews[]
  @@map("users")
}

model Masters {
  id              Int       @id @default(autoincrement())
  user_id         Int       @unique
  name            String
  intro           String?
  start_time      String?
  end_time        String?
  work_experience Int?
  employee_number Int?
  is_deleted      Boolean   @default(false)
  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())
  deleted_at      DateTime? @default(now())

  users Users @relation(fields: [user_id], references: [id])

  reviews            Reviews[]
  mastersCategories  MastersCategories[]
  mastersRequestForm MastersRequestForm[]
  mastersAddress     MastersAddress[]
  masterPost         MasterPost[]
  @@index([user_id], name: "user_id")
  @@map("masters")
}

model ThemaCategories {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  lessons LessonCategories[]
  @@map("thema_categories")
}

model LessonCategories {
  id                Int       @id @default(autoincrement())
  thema_category_id Int
  name              String
  image             String?
  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())

  thema_categories ThemaCategories @relation(fields: [thema_category_id], references: [id])

  questions         Questions[]
  requestForm       RequestForm[]
  MastersCategories MastersCategories[]
  @@index([thema_category_id], name: "thema_category_id")
  @@map("lesson_categories")
}

model Questions {
  id                 Int       @id @default(autoincrement())
  lesson_category_id Int
  question_number    Int
  description        String
  created_at         DateTime? @default(now())
  updated_at         DateTime? @default(now())

  lesson_categories LessonCategories @relation(fields: [lesson_category_id], references: [id])

  choices     ChoiceQuestions[]
  requestForm RequestForm[]

  @@index([lesson_category_id], name: "lesson_category_id")
  @@map("questions")
}

model ChoiceQuestions {
  id          Int       @id @default(autoincrement())
  question_id Int
  description String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  questions Questions @relation(fields: [question_id], references: [id])

  requestForm RequestForm[]

  @@index([question_id], name: "question_id")
  @@map("choice_questions")
}

model RequestForm {
  id                 Int       @id @default(autoincrement())
  user_id            Int
  question_id        Int
  choice_question_id Int
  lesson_category_id Int
  ended_at           DateTime?
  created_at         DateTime? @default(now())
  updated_at         DateTime? @default(now())

  users             Users            @relation(fields: [user_id], references: [id])
  questions         Questions        @relation(fields: [question_id], references: [id])
  choice_questions  ChoiceQuestions  @relation(fields: [choice_question_id], references: [id])
  lesson_categories LessonCategories @relation(fields: [lesson_category_id], references: [id])

  mastersRequestForm MastersRequestForm[]
  @@index([user_id], name: "user_id")
  @@index([question_id], name: "question_id")
  @@index([choice_question_id], name: "choice_question_id")
  @@index([lesson_category_id], name: "lesson_category_id")
  @@map("request_form")
}

model Reviews {
  id         Int       @id @default(autoincrement())
  master_id  Int
  user_id    Int
  grade      Int
  comment    String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  masters Masters @relation(fields: [master_id], references: [id])
  users   Users   @relation(fields: [user_id], references: [id])

  reviewImages ReviewImage[]

  @@index([master_id], name: "master_id")
  @@index([user_id], name: "user_id")
  @@map("reviews")
}

model MastersCategories {
  id                 Int       @id @default(autoincrement())
  lesson_category_id Int
  master_id          Int
  is_main            Boolean   @default(false)
  created_at         DateTime? @default(now())
  updated_at         DateTime? @default(now())

  masters Masters          @relation(fields: [master_id], references: [id])
  lessons LessonCategories @relation(fields: [lesson_category_id], references: [id])

  @@index([master_id], name: "master_id")
  @@index([lesson_category_id], name: "lesson_category_id")
  @@map("masters_categories")
}

model MastersRequestForm {
  id              Int       @id @default(autoincrement())
  request_form_id Int
  master_id       Int
  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())

  masters      Masters     @relation(fields: [master_id], references: [id])
  request_form RequestForm @relation(fields: [request_form_id], references: [id])

  @@index([master_id], name: "master_id")
  @@index([request_form_id], name: "request_form_id")
  @@map("masters_request_form")
}

model Address {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  details        DetailAddress[]
  mastersAddress MastersAddress[]
  @@map("address")
}

model DetailAddress {
  id         Int       @id @default(autoincrement())
  address_id Int
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  address Address @relation(fields: [address_id], references: [id])

  mastersAddress MastersAddress[]
  @@index([address_id], name: "address_id")
  @@map("detail_address")
}

model MastersAddress {
  id                Int       @id @default(autoincrement())
  master_id         Int
  address_id        Int
  detail_address_id Int
  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())

  masters        Masters       @relation(fields: [master_id], references: [id])
  address        Address       @relation(fields: [address_id], references: [id])
  detail_address DetailAddress @relation(fields: [detail_address_id], references: [id])

  @@index([master_id], name: "master_id")
  @@index([address_id], name: "address_id")
  @@index([detail_address_id], name: "detail_address_id")
  @@map("masters_address")
}

model ReviewImage {
  id Int @id @default(autoincrement())
  review_id        Int
  review_image_url String @db.VarChar(1000)
  created_at       DateTime? @default(now())
  updated_at       DateTime? @default(now())

  review Reviews @relation(fields: [review_id], references: [id])
  @@map("reviews_images")
}

model MasterPost {
  id               Int @id @default(autoincrement())
  master_id        Int 
  master_posts     String @db.VarChar(1000)
  created_at       DateTime? @default(now())
  updated_at       DateTime? @default(now())
  
  master Masters @relation(fields: [master_id], references: [id])
  @@map("master_posts")
}